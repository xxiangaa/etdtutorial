import { useCallback } from 'react';
function useMemoizedMouseHandler(id, dragging, getState, handler) {
    const memoizedHandler = useCallback((event) => {
        if (typeof handler !== 'undefined' && !dragging) {
            const node = getState().nodeInternals.get(id);
            handler(event, { ...node });
        }
    }, [handler, dragging, id]);
    return memoizedHandler;
}
export default useMemoizedMouseHandler;
